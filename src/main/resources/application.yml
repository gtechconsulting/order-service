server:
  port: 8080
  servlet:
    context-path: /

spring:
  application:
    name: order-service

  # Database Configuration
  datasource:
    url: jdbc:postgresql://postgres:5432/orderdb
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000
      pool-name: OrderServiceHikariCP

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true

  # Kafka Configuration
  kafka:
    bootstrap-servers: kafka:29092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      retries: 3
      batch-size: 16384
      buffer-memory: 33554432
    consumer:
      group-id: order-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

# Swagger Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

# External Systems Configuration
external:
  system:
    a:
      url: http://system-a:8081
      connection-timeout: 5000
      read-timeout: 5000
    b:
      url: http://system-b:8082
      connection-timeout: 5000
      read-timeout: 5000

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      systemA:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
      systemB:
        slidingWindowSize: 10
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
        permittedNumberOfCallsInHalfOpenState: 3
  retry:
    instances:
      systemA:
        maxAttempts: 3
        waitDuration: 1000
      systemB:
        maxAttempts: 3
        waitDuration: 1000
  ratelimiter:
    instances:
      default:
        limitForPeriod: 100
        limitRefreshPeriod: 1s
        timeoutDuration: 0s

# Cache Configuration
spring.cache:
  type: caffeine
  cache-names: orderCache, productCache
  caffeine:
    spec: maximumSize=500,expireAfterWrite=300s

# Logging Configuration
logging:
  level:
    root: INFO
    com.orderservice: DEBUG
    org.springframework.web: INFO
    org.hibernate: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Metrics Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}